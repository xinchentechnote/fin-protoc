// Code generated from grammar/PacketDsl.g4 by ANTLR 4.13.2. DO NOT EDIT.

package gen

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr4-go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type PacketDslLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var PacketDslLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func packetdsllexerLexerInit() {
	staticData := &PacketDslLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'options'", "'{'", "'}'", "'='", "'@calculatedFrom('", "')'", "'@lengthOf('",
		"'('", "'string'", "'char'", "'char['", "']'", "'as'", "'['", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "'root'", "'packet'",
		"'repeat'", "'MetaData'", "'match'", "':'", "','", "';'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "UINT8",
		"UINT16", "UINT32", "UINT64", "INT8", "INT16", "INT32", "INT64", "FLOAT32",
		"FLOAT64", "DIGITS", "STRING", "PADDING_ATTR", "PADDING_CHAR", "ROOT",
		"PACKET", "REPEAT", "METADATA", "MATCH", "COLON", "COMMA", "SEMICOLON",
		"IDENTIFIER", "STRING_LITERAL", "LINE_COMMENT", "WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "UINT8", "UINT16", "UINT32",
		"UINT64", "INT8", "INT16", "INT32", "INT64", "FLOAT32", "FLOAT64", "DIGITS",
		"STRING", "PADDING_ATTR", "PADDING_CHAR", "ROOT", "PACKET", "REPEAT",
		"METADATA", "MATCH", "COLON", "COMMA", "SEMICOLON", "IDENTIFIER", "STRING_LITERAL",
		"LINE_COMMENT", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 40, 371, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8,
		1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 14, 1, 14, 3, 14, 160, 8, 14, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 3, 15, 171, 8, 15, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 3, 16, 182, 8, 16,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 3, 17, 193,
		8, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 3, 18, 201, 8, 18, 1,
		19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 3, 19, 211, 8, 19,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 3, 20, 221, 8,
		20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 3, 21, 231,
		8, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1,
		22, 3, 22, 243, 8, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 23, 3, 23, 255, 8, 23, 1, 24, 4, 24, 258, 8, 24, 11, 24,
		12, 24, 259, 1, 25, 1, 25, 1, 25, 1, 25, 5, 25, 266, 8, 25, 10, 25, 12,
		25, 269, 9, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26,
		1, 26, 1, 26, 1, 26, 1, 26, 3, 26, 283, 8, 26, 1, 26, 1, 26, 1, 26, 1,
		26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28,
		1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1,
		30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31,
		1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1,
		32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36, 5, 36, 339,
		8, 36, 10, 36, 12, 36, 342, 9, 36, 1, 37, 1, 37, 1, 37, 5, 37, 347, 8,
		37, 10, 37, 12, 37, 350, 9, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38,
		5, 38, 358, 8, 38, 10, 38, 12, 38, 361, 9, 38, 1, 38, 1, 38, 1, 39, 4,
		39, 366, 8, 39, 11, 39, 12, 39, 367, 1, 39, 1, 39, 0, 0, 40, 1, 1, 3, 2,
		5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
		22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61,
		31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79,
		40, 1, 0, 8, 1, 0, 48, 57, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 2, 0,
		32, 32, 48, 48, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95,
		95, 97, 122, 1, 0, 96, 96, 2, 0, 10, 10, 13, 13, 3, 0, 9, 10, 13, 13, 32,
		32, 389, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1,
		0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15,
		1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0,
		23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0,
		0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0,
		0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0,
		0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1,
		0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61,
		1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0,
		69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0,
		0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 1, 81, 1, 0, 0, 0, 3, 89, 1, 0, 0,
		0, 5, 91, 1, 0, 0, 0, 7, 93, 1, 0, 0, 0, 9, 95, 1, 0, 0, 0, 11, 112, 1,
		0, 0, 0, 13, 114, 1, 0, 0, 0, 15, 125, 1, 0, 0, 0, 17, 127, 1, 0, 0, 0,
		19, 134, 1, 0, 0, 0, 21, 139, 1, 0, 0, 0, 23, 145, 1, 0, 0, 0, 25, 147,
		1, 0, 0, 0, 27, 150, 1, 0, 0, 0, 29, 159, 1, 0, 0, 0, 31, 170, 1, 0, 0,
		0, 33, 181, 1, 0, 0, 0, 35, 192, 1, 0, 0, 0, 37, 200, 1, 0, 0, 0, 39, 210,
		1, 0, 0, 0, 41, 220, 1, 0, 0, 0, 43, 230, 1, 0, 0, 0, 45, 242, 1, 0, 0,
		0, 47, 254, 1, 0, 0, 0, 49, 257, 1, 0, 0, 0, 51, 261, 1, 0, 0, 0, 53, 272,
		1, 0, 0, 0, 55, 292, 1, 0, 0, 0, 57, 296, 1, 0, 0, 0, 59, 301, 1, 0, 0,
		0, 61, 308, 1, 0, 0, 0, 63, 315, 1, 0, 0, 0, 65, 324, 1, 0, 0, 0, 67, 330,
		1, 0, 0, 0, 69, 332, 1, 0, 0, 0, 71, 334, 1, 0, 0, 0, 73, 336, 1, 0, 0,
		0, 75, 343, 1, 0, 0, 0, 77, 353, 1, 0, 0, 0, 79, 365, 1, 0, 0, 0, 81, 82,
		5, 111, 0, 0, 82, 83, 5, 112, 0, 0, 83, 84, 5, 116, 0, 0, 84, 85, 5, 105,
		0, 0, 85, 86, 5, 111, 0, 0, 86, 87, 5, 110, 0, 0, 87, 88, 5, 115, 0, 0,
		88, 2, 1, 0, 0, 0, 89, 90, 5, 123, 0, 0, 90, 4, 1, 0, 0, 0, 91, 92, 5,
		125, 0, 0, 92, 6, 1, 0, 0, 0, 93, 94, 5, 61, 0, 0, 94, 8, 1, 0, 0, 0, 95,
		96, 5, 64, 0, 0, 96, 97, 5, 99, 0, 0, 97, 98, 5, 97, 0, 0, 98, 99, 5, 108,
		0, 0, 99, 100, 5, 99, 0, 0, 100, 101, 5, 117, 0, 0, 101, 102, 5, 108, 0,
		0, 102, 103, 5, 97, 0, 0, 103, 104, 5, 116, 0, 0, 104, 105, 5, 101, 0,
		0, 105, 106, 5, 100, 0, 0, 106, 107, 5, 70, 0, 0, 107, 108, 5, 114, 0,
		0, 108, 109, 5, 111, 0, 0, 109, 110, 5, 109, 0, 0, 110, 111, 5, 40, 0,
		0, 111, 10, 1, 0, 0, 0, 112, 113, 5, 41, 0, 0, 113, 12, 1, 0, 0, 0, 114,
		115, 5, 64, 0, 0, 115, 116, 5, 108, 0, 0, 116, 117, 5, 101, 0, 0, 117,
		118, 5, 110, 0, 0, 118, 119, 5, 103, 0, 0, 119, 120, 5, 116, 0, 0, 120,
		121, 5, 104, 0, 0, 121, 122, 5, 79, 0, 0, 122, 123, 5, 102, 0, 0, 123,
		124, 5, 40, 0, 0, 124, 14, 1, 0, 0, 0, 125, 126, 5, 40, 0, 0, 126, 16,
		1, 0, 0, 0, 127, 128, 5, 115, 0, 0, 128, 129, 5, 116, 0, 0, 129, 130, 5,
		114, 0, 0, 130, 131, 5, 105, 0, 0, 131, 132, 5, 110, 0, 0, 132, 133, 5,
		103, 0, 0, 133, 18, 1, 0, 0, 0, 134, 135, 5, 99, 0, 0, 135, 136, 5, 104,
		0, 0, 136, 137, 5, 97, 0, 0, 137, 138, 5, 114, 0, 0, 138, 20, 1, 0, 0,
		0, 139, 140, 5, 99, 0, 0, 140, 141, 5, 104, 0, 0, 141, 142, 5, 97, 0, 0,
		142, 143, 5, 114, 0, 0, 143, 144, 5, 91, 0, 0, 144, 22, 1, 0, 0, 0, 145,
		146, 5, 93, 0, 0, 146, 24, 1, 0, 0, 0, 147, 148, 5, 97, 0, 0, 148, 149,
		5, 115, 0, 0, 149, 26, 1, 0, 0, 0, 150, 151, 5, 91, 0, 0, 151, 28, 1, 0,
		0, 0, 152, 153, 5, 117, 0, 0, 153, 154, 5, 105, 0, 0, 154, 155, 5, 110,
		0, 0, 155, 156, 5, 116, 0, 0, 156, 160, 5, 56, 0, 0, 157, 158, 5, 117,
		0, 0, 158, 160, 5, 56, 0, 0, 159, 152, 1, 0, 0, 0, 159, 157, 1, 0, 0, 0,
		160, 30, 1, 0, 0, 0, 161, 162, 5, 117, 0, 0, 162, 163, 5, 105, 0, 0, 163,
		164, 5, 110, 0, 0, 164, 165, 5, 116, 0, 0, 165, 166, 5, 49, 0, 0, 166,
		171, 5, 54, 0, 0, 167, 168, 5, 117, 0, 0, 168, 169, 5, 49, 0, 0, 169, 171,
		5, 54, 0, 0, 170, 161, 1, 0, 0, 0, 170, 167, 1, 0, 0, 0, 171, 32, 1, 0,
		0, 0, 172, 173, 5, 117, 0, 0, 173, 174, 5, 105, 0, 0, 174, 175, 5, 110,
		0, 0, 175, 176, 5, 116, 0, 0, 176, 177, 5, 51, 0, 0, 177, 182, 5, 50, 0,
		0, 178, 179, 5, 117, 0, 0, 179, 180, 5, 51, 0, 0, 180, 182, 5, 50, 0, 0,
		181, 172, 1, 0, 0, 0, 181, 178, 1, 0, 0, 0, 182, 34, 1, 0, 0, 0, 183, 184,
		5, 117, 0, 0, 184, 185, 5, 105, 0, 0, 185, 186, 5, 110, 0, 0, 186, 187,
		5, 116, 0, 0, 187, 188, 5, 54, 0, 0, 188, 193, 5, 52, 0, 0, 189, 190, 5,
		117, 0, 0, 190, 191, 5, 54, 0, 0, 191, 193, 5, 52, 0, 0, 192, 183, 1, 0,
		0, 0, 192, 189, 1, 0, 0, 0, 193, 36, 1, 0, 0, 0, 194, 195, 5, 105, 0, 0,
		195, 196, 5, 110, 0, 0, 196, 197, 5, 116, 0, 0, 197, 201, 5, 56, 0, 0,
		198, 199, 5, 105, 0, 0, 199, 201, 5, 56, 0, 0, 200, 194, 1, 0, 0, 0, 200,
		198, 1, 0, 0, 0, 201, 38, 1, 0, 0, 0, 202, 203, 5, 105, 0, 0, 203, 204,
		5, 110, 0, 0, 204, 205, 5, 116, 0, 0, 205, 206, 5, 49, 0, 0, 206, 211,
		5, 54, 0, 0, 207, 208, 5, 105, 0, 0, 208, 209, 5, 49, 0, 0, 209, 211, 5,
		54, 0, 0, 210, 202, 1, 0, 0, 0, 210, 207, 1, 0, 0, 0, 211, 40, 1, 0, 0,
		0, 212, 213, 5, 105, 0, 0, 213, 214, 5, 110, 0, 0, 214, 215, 5, 116, 0,
		0, 215, 216, 5, 51, 0, 0, 216, 221, 5, 50, 0, 0, 217, 218, 5, 105, 0, 0,
		218, 219, 5, 51, 0, 0, 219, 221, 5, 50, 0, 0, 220, 212, 1, 0, 0, 0, 220,
		217, 1, 0, 0, 0, 221, 42, 1, 0, 0, 0, 222, 223, 5, 105, 0, 0, 223, 224,
		5, 110, 0, 0, 224, 225, 5, 116, 0, 0, 225, 226, 5, 54, 0, 0, 226, 231,
		5, 52, 0, 0, 227, 228, 5, 105, 0, 0, 228, 229, 5, 54, 0, 0, 229, 231, 5,
		52, 0, 0, 230, 222, 1, 0, 0, 0, 230, 227, 1, 0, 0, 0, 231, 44, 1, 0, 0,
		0, 232, 233, 5, 102, 0, 0, 233, 234, 5, 108, 0, 0, 234, 235, 5, 111, 0,
		0, 235, 236, 5, 97, 0, 0, 236, 237, 5, 116, 0, 0, 237, 238, 5, 51, 0, 0,
		238, 243, 5, 50, 0, 0, 239, 240, 5, 102, 0, 0, 240, 241, 5, 51, 0, 0, 241,
		243, 5, 50, 0, 0, 242, 232, 1, 0, 0, 0, 242, 239, 1, 0, 0, 0, 243, 46,
		1, 0, 0, 0, 244, 245, 5, 102, 0, 0, 245, 246, 5, 108, 0, 0, 246, 247, 5,
		111, 0, 0, 247, 248, 5, 97, 0, 0, 248, 249, 5, 116, 0, 0, 249, 250, 5,
		54, 0, 0, 250, 255, 5, 52, 0, 0, 251, 252, 5, 102, 0, 0, 252, 253, 5, 54,
		0, 0, 253, 255, 5, 52, 0, 0, 254, 244, 1, 0, 0, 0, 254, 251, 1, 0, 0, 0,
		255, 48, 1, 0, 0, 0, 256, 258, 7, 0, 0, 0, 257, 256, 1, 0, 0, 0, 258, 259,
		1, 0, 0, 0, 259, 257, 1, 0, 0, 0, 259, 260, 1, 0, 0, 0, 260, 50, 1, 0,
		0, 0, 261, 267, 5, 34, 0, 0, 262, 266, 8, 1, 0, 0, 263, 264, 5, 92, 0,
		0, 264, 266, 9, 0, 0, 0, 265, 262, 1, 0, 0, 0, 265, 263, 1, 0, 0, 0, 266,
		269, 1, 0, 0, 0, 267, 265, 1, 0, 0, 0, 267, 268, 1, 0, 0, 0, 268, 270,
		1, 0, 0, 0, 269, 267, 1, 0, 0, 0, 270, 271, 5, 34, 0, 0, 271, 52, 1, 0,
		0, 0, 272, 282, 5, 64, 0, 0, 273, 274, 5, 108, 0, 0, 274, 275, 5, 101,
		0, 0, 275, 276, 5, 102, 0, 0, 276, 283, 5, 116, 0, 0, 277, 278, 5, 114,
		0, 0, 278, 279, 5, 105, 0, 0, 279, 280, 5, 103, 0, 0, 280, 281, 5, 104,
		0, 0, 281, 283, 5, 116, 0, 0, 282, 273, 1, 0, 0, 0, 282, 277, 1, 0, 0,
		0, 283, 284, 1, 0, 0, 0, 284, 285, 5, 80, 0, 0, 285, 286, 5, 97, 0, 0,
		286, 287, 5, 100, 0, 0, 287, 288, 5, 100, 0, 0, 288, 289, 5, 105, 0, 0,
		289, 290, 5, 110, 0, 0, 290, 291, 5, 103, 0, 0, 291, 54, 1, 0, 0, 0, 292,
		293, 5, 39, 0, 0, 293, 294, 7, 2, 0, 0, 294, 295, 5, 39, 0, 0, 295, 56,
		1, 0, 0, 0, 296, 297, 5, 114, 0, 0, 297, 298, 5, 111, 0, 0, 298, 299, 5,
		111, 0, 0, 299, 300, 5, 116, 0, 0, 300, 58, 1, 0, 0, 0, 301, 302, 5, 112,
		0, 0, 302, 303, 5, 97, 0, 0, 303, 304, 5, 99, 0, 0, 304, 305, 5, 107, 0,
		0, 305, 306, 5, 101, 0, 0, 306, 307, 5, 116, 0, 0, 307, 60, 1, 0, 0, 0,
		308, 309, 5, 114, 0, 0, 309, 310, 5, 101, 0, 0, 310, 311, 5, 112, 0, 0,
		311, 312, 5, 101, 0, 0, 312, 313, 5, 97, 0, 0, 313, 314, 5, 116, 0, 0,
		314, 62, 1, 0, 0, 0, 315, 316, 5, 77, 0, 0, 316, 317, 5, 101, 0, 0, 317,
		318, 5, 116, 0, 0, 318, 319, 5, 97, 0, 0, 319, 320, 5, 68, 0, 0, 320, 321,
		5, 97, 0, 0, 321, 322, 5, 116, 0, 0, 322, 323, 5, 97, 0, 0, 323, 64, 1,
		0, 0, 0, 324, 325, 5, 109, 0, 0, 325, 326, 5, 97, 0, 0, 326, 327, 5, 116,
		0, 0, 327, 328, 5, 99, 0, 0, 328, 329, 5, 104, 0, 0, 329, 66, 1, 0, 0,
		0, 330, 331, 5, 58, 0, 0, 331, 68, 1, 0, 0, 0, 332, 333, 5, 44, 0, 0, 333,
		70, 1, 0, 0, 0, 334, 335, 5, 59, 0, 0, 335, 72, 1, 0, 0, 0, 336, 340, 7,
		3, 0, 0, 337, 339, 7, 4, 0, 0, 338, 337, 1, 0, 0, 0, 339, 342, 1, 0, 0,
		0, 340, 338, 1, 0, 0, 0, 340, 341, 1, 0, 0, 0, 341, 74, 1, 0, 0, 0, 342,
		340, 1, 0, 0, 0, 343, 348, 5, 96, 0, 0, 344, 347, 8, 5, 0, 0, 345, 347,
		7, 6, 0, 0, 346, 344, 1, 0, 0, 0, 346, 345, 1, 0, 0, 0, 347, 350, 1, 0,
		0, 0, 348, 346, 1, 0, 0, 0, 348, 349, 1, 0, 0, 0, 349, 351, 1, 0, 0, 0,
		350, 348, 1, 0, 0, 0, 351, 352, 5, 96, 0, 0, 352, 76, 1, 0, 0, 0, 353,
		354, 5, 47, 0, 0, 354, 355, 5, 47, 0, 0, 355, 359, 1, 0, 0, 0, 356, 358,
		8, 6, 0, 0, 357, 356, 1, 0, 0, 0, 358, 361, 1, 0, 0, 0, 359, 357, 1, 0,
		0, 0, 359, 360, 1, 0, 0, 0, 360, 362, 1, 0, 0, 0, 361, 359, 1, 0, 0, 0,
		362, 363, 6, 38, 0, 0, 363, 78, 1, 0, 0, 0, 364, 366, 7, 7, 0, 0, 365,
		364, 1, 0, 0, 0, 366, 367, 1, 0, 0, 0, 367, 365, 1, 0, 0, 0, 367, 368,
		1, 0, 0, 0, 368, 369, 1, 0, 0, 0, 369, 370, 6, 39, 1, 0, 370, 80, 1, 0,
		0, 0, 20, 0, 159, 170, 181, 192, 200, 210, 220, 230, 242, 254, 259, 265,
		267, 282, 340, 346, 348, 359, 367, 2, 0, 1, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// PacketDslLexerInit initializes any static state used to implement PacketDslLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewPacketDslLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func PacketDslLexerInit() {
	staticData := &PacketDslLexerLexerStaticData
	staticData.once.Do(packetdsllexerLexerInit)
}

// NewPacketDslLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewPacketDslLexer(input antlr.CharStream) *PacketDslLexer {
	PacketDslLexerInit()
	l := new(PacketDslLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &PacketDslLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "PacketDsl.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// PacketDslLexer tokens.
const (
	PacketDslLexerT__0           = 1
	PacketDslLexerT__1           = 2
	PacketDslLexerT__2           = 3
	PacketDslLexerT__3           = 4
	PacketDslLexerT__4           = 5
	PacketDslLexerT__5           = 6
	PacketDslLexerT__6           = 7
	PacketDslLexerT__7           = 8
	PacketDslLexerT__8           = 9
	PacketDslLexerT__9           = 10
	PacketDslLexerT__10          = 11
	PacketDslLexerT__11          = 12
	PacketDslLexerT__12          = 13
	PacketDslLexerT__13          = 14
	PacketDslLexerUINT8          = 15
	PacketDslLexerUINT16         = 16
	PacketDslLexerUINT32         = 17
	PacketDslLexerUINT64         = 18
	PacketDslLexerINT8           = 19
	PacketDslLexerINT16          = 20
	PacketDslLexerINT32          = 21
	PacketDslLexerINT64          = 22
	PacketDslLexerFLOAT32        = 23
	PacketDslLexerFLOAT64        = 24
	PacketDslLexerDIGITS         = 25
	PacketDslLexerSTRING         = 26
	PacketDslLexerPADDING_ATTR   = 27
	PacketDslLexerPADDING_CHAR   = 28
	PacketDslLexerROOT           = 29
	PacketDslLexerPACKET         = 30
	PacketDslLexerREPEAT         = 31
	PacketDslLexerMETADATA       = 32
	PacketDslLexerMATCH          = 33
	PacketDslLexerCOLON          = 34
	PacketDslLexerCOMMA          = 35
	PacketDslLexerSEMICOLON      = 36
	PacketDslLexerIDENTIFIER     = 37
	PacketDslLexerSTRING_LITERAL = 38
	PacketDslLexerLINE_COMMENT   = 39
	PacketDslLexerWS             = 40
)
