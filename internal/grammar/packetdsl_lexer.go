// Code generated from grammar/PacketDsl.g4 by ANTLR 4.13.2. DO NOT EDIT.

package gen

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr4-go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type PacketDslLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var PacketDslLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func packetdsllexerLexerInit() {
	staticData := &PacketDslLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'options'", "'{'", "'}'", "'='", "'string'", "'char'", "'char['",
		"']'", "'['", "", "", "", "", "", "", "", "", "", "", "", "", "'root'",
		"'packet'", "'repeat'", "'MetaData'", "'match'", "':'", "','", "';'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "UINT8", "UINT16", "UINT32",
		"UINT64", "INT8", "INT16", "INT32", "INT64", "FLOAT32", "FLOAT64", "DIGITS",
		"STRING", "ROOT", "PACKET", "REPEAT", "METADATA", "MATCH", "COLON",
		"COMMA", "SEMICOLON", "IDENTIFIER", "STRING_LITERAL", "LINE_COMMENT",
		"WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"UINT8", "UINT16", "UINT32", "UINT64", "INT8", "INT16", "INT32", "INT64",
		"FLOAT32", "FLOAT64", "DIGITS", "STRING", "ROOT", "PACKET", "REPEAT",
		"METADATA", "MATCH", "COLON", "COMMA", "SEMICOLON", "IDENTIFIER", "STRING_LITERAL",
		"LINE_COMMENT", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 33, 298, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 3, 9,
		111, 8, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		3, 10, 122, 8, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1,
		11, 1, 11, 3, 11, 133, 8, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 12, 3, 12, 144, 8, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1,
		13, 1, 13, 3, 13, 152, 8, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 14, 3, 14, 162, 8, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 15, 3, 15, 172, 8, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 3, 16, 182, 8, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 3, 17, 194, 8, 17, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 3, 18, 206, 8,
		18, 1, 19, 4, 19, 209, 8, 19, 11, 19, 12, 19, 210, 1, 20, 1, 20, 1, 20,
		1, 20, 5, 20, 217, 8, 20, 10, 20, 12, 20, 220, 9, 20, 1, 20, 1, 20, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22,
		1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1,
		24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25,
		1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 5,
		29, 266, 8, 29, 10, 29, 12, 29, 269, 9, 29, 1, 30, 1, 30, 1, 30, 5, 30,
		274, 8, 30, 10, 30, 12, 30, 277, 9, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1,
		31, 1, 31, 5, 31, 285, 8, 31, 10, 31, 12, 31, 288, 9, 31, 1, 31, 1, 31,
		1, 32, 4, 32, 293, 8, 32, 11, 32, 12, 32, 294, 1, 32, 1, 32, 0, 0, 33,
		1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11,
		23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20,
		41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29,
		59, 30, 61, 31, 63, 32, 65, 33, 1, 0, 15, 2, 0, 85, 85, 117, 117, 2, 0,
		73, 73, 105, 105, 2, 0, 78, 78, 110, 110, 2, 0, 84, 84, 116, 116, 2, 0,
		70, 70, 102, 102, 2, 0, 76, 76, 108, 108, 2, 0, 79, 79, 111, 111, 2, 0,
		65, 65, 97, 97, 1, 0, 48, 57, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 3,
		0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 1, 0,
		96, 96, 2, 0, 10, 10, 13, 13, 3, 0, 9, 10, 13, 13, 32, 32, 315, 0, 1, 1,
		0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1,
		0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17,
		1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0,
		25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0,
		0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0,
		0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0,
		0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1,
		0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63,
		1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 1, 67, 1, 0, 0, 0, 3, 75, 1, 0, 0, 0, 5,
		77, 1, 0, 0, 0, 7, 79, 1, 0, 0, 0, 9, 81, 1, 0, 0, 0, 11, 88, 1, 0, 0,
		0, 13, 93, 1, 0, 0, 0, 15, 99, 1, 0, 0, 0, 17, 101, 1, 0, 0, 0, 19, 110,
		1, 0, 0, 0, 21, 121, 1, 0, 0, 0, 23, 132, 1, 0, 0, 0, 25, 143, 1, 0, 0,
		0, 27, 151, 1, 0, 0, 0, 29, 161, 1, 0, 0, 0, 31, 171, 1, 0, 0, 0, 33, 181,
		1, 0, 0, 0, 35, 193, 1, 0, 0, 0, 37, 205, 1, 0, 0, 0, 39, 208, 1, 0, 0,
		0, 41, 212, 1, 0, 0, 0, 43, 223, 1, 0, 0, 0, 45, 228, 1, 0, 0, 0, 47, 235,
		1, 0, 0, 0, 49, 242, 1, 0, 0, 0, 51, 251, 1, 0, 0, 0, 53, 257, 1, 0, 0,
		0, 55, 259, 1, 0, 0, 0, 57, 261, 1, 0, 0, 0, 59, 263, 1, 0, 0, 0, 61, 270,
		1, 0, 0, 0, 63, 280, 1, 0, 0, 0, 65, 292, 1, 0, 0, 0, 67, 68, 5, 111, 0,
		0, 68, 69, 5, 112, 0, 0, 69, 70, 5, 116, 0, 0, 70, 71, 5, 105, 0, 0, 71,
		72, 5, 111, 0, 0, 72, 73, 5, 110, 0, 0, 73, 74, 5, 115, 0, 0, 74, 2, 1,
		0, 0, 0, 75, 76, 5, 123, 0, 0, 76, 4, 1, 0, 0, 0, 77, 78, 5, 125, 0, 0,
		78, 6, 1, 0, 0, 0, 79, 80, 5, 61, 0, 0, 80, 8, 1, 0, 0, 0, 81, 82, 5, 115,
		0, 0, 82, 83, 5, 116, 0, 0, 83, 84, 5, 114, 0, 0, 84, 85, 5, 105, 0, 0,
		85, 86, 5, 110, 0, 0, 86, 87, 5, 103, 0, 0, 87, 10, 1, 0, 0, 0, 88, 89,
		5, 99, 0, 0, 89, 90, 5, 104, 0, 0, 90, 91, 5, 97, 0, 0, 91, 92, 5, 114,
		0, 0, 92, 12, 1, 0, 0, 0, 93, 94, 5, 99, 0, 0, 94, 95, 5, 104, 0, 0, 95,
		96, 5, 97, 0, 0, 96, 97, 5, 114, 0, 0, 97, 98, 5, 91, 0, 0, 98, 14, 1,
		0, 0, 0, 99, 100, 5, 93, 0, 0, 100, 16, 1, 0, 0, 0, 101, 102, 5, 91, 0,
		0, 102, 18, 1, 0, 0, 0, 103, 104, 7, 0, 0, 0, 104, 105, 7, 1, 0, 0, 105,
		106, 7, 2, 0, 0, 106, 107, 7, 3, 0, 0, 107, 111, 5, 56, 0, 0, 108, 109,
		7, 0, 0, 0, 109, 111, 5, 56, 0, 0, 110, 103, 1, 0, 0, 0, 110, 108, 1, 0,
		0, 0, 111, 20, 1, 0, 0, 0, 112, 113, 7, 0, 0, 0, 113, 114, 7, 1, 0, 0,
		114, 115, 7, 2, 0, 0, 115, 116, 7, 3, 0, 0, 116, 117, 5, 49, 0, 0, 117,
		122, 5, 54, 0, 0, 118, 119, 7, 0, 0, 0, 119, 120, 5, 49, 0, 0, 120, 122,
		5, 54, 0, 0, 121, 112, 1, 0, 0, 0, 121, 118, 1, 0, 0, 0, 122, 22, 1, 0,
		0, 0, 123, 124, 7, 0, 0, 0, 124, 125, 7, 1, 0, 0, 125, 126, 7, 2, 0, 0,
		126, 127, 7, 3, 0, 0, 127, 128, 5, 51, 0, 0, 128, 133, 5, 50, 0, 0, 129,
		130, 7, 0, 0, 0, 130, 131, 5, 51, 0, 0, 131, 133, 5, 50, 0, 0, 132, 123,
		1, 0, 0, 0, 132, 129, 1, 0, 0, 0, 133, 24, 1, 0, 0, 0, 134, 135, 7, 0,
		0, 0, 135, 136, 7, 1, 0, 0, 136, 137, 7, 2, 0, 0, 137, 138, 7, 3, 0, 0,
		138, 139, 5, 54, 0, 0, 139, 144, 5, 52, 0, 0, 140, 141, 7, 0, 0, 0, 141,
		142, 5, 54, 0, 0, 142, 144, 5, 52, 0, 0, 143, 134, 1, 0, 0, 0, 143, 140,
		1, 0, 0, 0, 144, 26, 1, 0, 0, 0, 145, 146, 7, 1, 0, 0, 146, 147, 7, 2,
		0, 0, 147, 148, 7, 3, 0, 0, 148, 152, 5, 56, 0, 0, 149, 150, 7, 1, 0, 0,
		150, 152, 5, 56, 0, 0, 151, 145, 1, 0, 0, 0, 151, 149, 1, 0, 0, 0, 152,
		28, 1, 0, 0, 0, 153, 154, 7, 1, 0, 0, 154, 155, 7, 2, 0, 0, 155, 156, 7,
		3, 0, 0, 156, 157, 5, 49, 0, 0, 157, 162, 5, 54, 0, 0, 158, 159, 7, 1,
		0, 0, 159, 160, 5, 49, 0, 0, 160, 162, 5, 54, 0, 0, 161, 153, 1, 0, 0,
		0, 161, 158, 1, 0, 0, 0, 162, 30, 1, 0, 0, 0, 163, 164, 7, 1, 0, 0, 164,
		165, 7, 2, 0, 0, 165, 166, 7, 3, 0, 0, 166, 167, 5, 51, 0, 0, 167, 172,
		5, 50, 0, 0, 168, 169, 7, 1, 0, 0, 169, 170, 5, 51, 0, 0, 170, 172, 5,
		50, 0, 0, 171, 163, 1, 0, 0, 0, 171, 168, 1, 0, 0, 0, 172, 32, 1, 0, 0,
		0, 173, 174, 7, 1, 0, 0, 174, 175, 7, 2, 0, 0, 175, 176, 7, 3, 0, 0, 176,
		177, 5, 54, 0, 0, 177, 182, 5, 52, 0, 0, 178, 179, 7, 1, 0, 0, 179, 180,
		5, 54, 0, 0, 180, 182, 5, 52, 0, 0, 181, 173, 1, 0, 0, 0, 181, 178, 1,
		0, 0, 0, 182, 34, 1, 0, 0, 0, 183, 184, 7, 4, 0, 0, 184, 185, 7, 5, 0,
		0, 185, 186, 7, 6, 0, 0, 186, 187, 7, 7, 0, 0, 187, 188, 7, 3, 0, 0, 188,
		189, 5, 51, 0, 0, 189, 194, 5, 50, 0, 0, 190, 191, 7, 4, 0, 0, 191, 192,
		5, 51, 0, 0, 192, 194, 5, 50, 0, 0, 193, 183, 1, 0, 0, 0, 193, 190, 1,
		0, 0, 0, 194, 36, 1, 0, 0, 0, 195, 196, 7, 4, 0, 0, 196, 197, 7, 5, 0,
		0, 197, 198, 7, 6, 0, 0, 198, 199, 7, 7, 0, 0, 199, 200, 7, 3, 0, 0, 200,
		201, 5, 54, 0, 0, 201, 206, 5, 52, 0, 0, 202, 203, 7, 4, 0, 0, 203, 204,
		5, 54, 0, 0, 204, 206, 5, 52, 0, 0, 205, 195, 1, 0, 0, 0, 205, 202, 1,
		0, 0, 0, 206, 38, 1, 0, 0, 0, 207, 209, 7, 8, 0, 0, 208, 207, 1, 0, 0,
		0, 209, 210, 1, 0, 0, 0, 210, 208, 1, 0, 0, 0, 210, 211, 1, 0, 0, 0, 211,
		40, 1, 0, 0, 0, 212, 218, 5, 34, 0, 0, 213, 217, 8, 9, 0, 0, 214, 215,
		5, 92, 0, 0, 215, 217, 9, 0, 0, 0, 216, 213, 1, 0, 0, 0, 216, 214, 1, 0,
		0, 0, 217, 220, 1, 0, 0, 0, 218, 216, 1, 0, 0, 0, 218, 219, 1, 0, 0, 0,
		219, 221, 1, 0, 0, 0, 220, 218, 1, 0, 0, 0, 221, 222, 5, 34, 0, 0, 222,
		42, 1, 0, 0, 0, 223, 224, 5, 114, 0, 0, 224, 225, 5, 111, 0, 0, 225, 226,
		5, 111, 0, 0, 226, 227, 5, 116, 0, 0, 227, 44, 1, 0, 0, 0, 228, 229, 5,
		112, 0, 0, 229, 230, 5, 97, 0, 0, 230, 231, 5, 99, 0, 0, 231, 232, 5, 107,
		0, 0, 232, 233, 5, 101, 0, 0, 233, 234, 5, 116, 0, 0, 234, 46, 1, 0, 0,
		0, 235, 236, 5, 114, 0, 0, 236, 237, 5, 101, 0, 0, 237, 238, 5, 112, 0,
		0, 238, 239, 5, 101, 0, 0, 239, 240, 5, 97, 0, 0, 240, 241, 5, 116, 0,
		0, 241, 48, 1, 0, 0, 0, 242, 243, 5, 77, 0, 0, 243, 244, 5, 101, 0, 0,
		244, 245, 5, 116, 0, 0, 245, 246, 5, 97, 0, 0, 246, 247, 5, 68, 0, 0, 247,
		248, 5, 97, 0, 0, 248, 249, 5, 116, 0, 0, 249, 250, 5, 97, 0, 0, 250, 50,
		1, 0, 0, 0, 251, 252, 5, 109, 0, 0, 252, 253, 5, 97, 0, 0, 253, 254, 5,
		116, 0, 0, 254, 255, 5, 99, 0, 0, 255, 256, 5, 104, 0, 0, 256, 52, 1, 0,
		0, 0, 257, 258, 5, 58, 0, 0, 258, 54, 1, 0, 0, 0, 259, 260, 5, 44, 0, 0,
		260, 56, 1, 0, 0, 0, 261, 262, 5, 59, 0, 0, 262, 58, 1, 0, 0, 0, 263, 267,
		7, 10, 0, 0, 264, 266, 7, 11, 0, 0, 265, 264, 1, 0, 0, 0, 266, 269, 1,
		0, 0, 0, 267, 265, 1, 0, 0, 0, 267, 268, 1, 0, 0, 0, 268, 60, 1, 0, 0,
		0, 269, 267, 1, 0, 0, 0, 270, 275, 5, 96, 0, 0, 271, 274, 8, 12, 0, 0,
		272, 274, 7, 13, 0, 0, 273, 271, 1, 0, 0, 0, 273, 272, 1, 0, 0, 0, 274,
		277, 1, 0, 0, 0, 275, 273, 1, 0, 0, 0, 275, 276, 1, 0, 0, 0, 276, 278,
		1, 0, 0, 0, 277, 275, 1, 0, 0, 0, 278, 279, 5, 96, 0, 0, 279, 62, 1, 0,
		0, 0, 280, 281, 5, 47, 0, 0, 281, 282, 5, 47, 0, 0, 282, 286, 1, 0, 0,
		0, 283, 285, 8, 13, 0, 0, 284, 283, 1, 0, 0, 0, 285, 288, 1, 0, 0, 0, 286,
		284, 1, 0, 0, 0, 286, 287, 1, 0, 0, 0, 287, 289, 1, 0, 0, 0, 288, 286,
		1, 0, 0, 0, 289, 290, 6, 31, 0, 0, 290, 64, 1, 0, 0, 0, 291, 293, 7, 14,
		0, 0, 292, 291, 1, 0, 0, 0, 293, 294, 1, 0, 0, 0, 294, 292, 1, 0, 0, 0,
		294, 295, 1, 0, 0, 0, 295, 296, 1, 0, 0, 0, 296, 297, 6, 32, 1, 0, 297,
		66, 1, 0, 0, 0, 19, 0, 110, 121, 132, 143, 151, 161, 171, 181, 193, 205,
		210, 216, 218, 267, 273, 275, 286, 294, 2, 0, 1, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// PacketDslLexerInit initializes any static state used to implement PacketDslLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewPacketDslLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func PacketDslLexerInit() {
	staticData := &PacketDslLexerLexerStaticData
	staticData.once.Do(packetdsllexerLexerInit)
}

// NewPacketDslLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewPacketDslLexer(input antlr.CharStream) *PacketDslLexer {
	PacketDslLexerInit()
	l := new(PacketDslLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &PacketDslLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "PacketDsl.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// PacketDslLexer tokens.
const (
	PacketDslLexerT__0           = 1
	PacketDslLexerT__1           = 2
	PacketDslLexerT__2           = 3
	PacketDslLexerT__3           = 4
	PacketDslLexerT__4           = 5
	PacketDslLexerT__5           = 6
	PacketDslLexerT__6           = 7
	PacketDslLexerT__7           = 8
	PacketDslLexerT__8           = 9
	PacketDslLexerUINT8          = 10
	PacketDslLexerUINT16         = 11
	PacketDslLexerUINT32         = 12
	PacketDslLexerUINT64         = 13
	PacketDslLexerINT8           = 14
	PacketDslLexerINT16          = 15
	PacketDslLexerINT32          = 16
	PacketDslLexerINT64          = 17
	PacketDslLexerFLOAT32        = 18
	PacketDslLexerFLOAT64        = 19
	PacketDslLexerDIGITS         = 20
	PacketDslLexerSTRING         = 21
	PacketDslLexerROOT           = 22
	PacketDslLexerPACKET         = 23
	PacketDslLexerREPEAT         = 24
	PacketDslLexerMETADATA       = 25
	PacketDslLexerMATCH          = 26
	PacketDslLexerCOLON          = 27
	PacketDslLexerCOMMA          = 28
	PacketDslLexerSEMICOLON      = 29
	PacketDslLexerIDENTIFIER     = 30
	PacketDslLexerSTRING_LITERAL = 31
	PacketDslLexerLINE_COMMENT   = 32
	PacketDslLexerWS             = 33
)
