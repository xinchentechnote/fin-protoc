// Code generated from grammar/PacketDsl.g4 by ANTLR 4.13.2. DO NOT EDIT.

package gen

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr4-go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type PacketDslLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var PacketDslLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func packetdsllexerLexerInit() {
	staticData := &PacketDslLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'options'", "'{'", "'}'", "'='", "'@calculatedFrom('", "')'", "'@lengthOf('",
		"'('", "'@tag('", "'string'", "'char'", "'char['", "']'", "'as'", "'['",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "'root'", "'packet'",
		"'repeat'", "'MetaData'", "'match'", "':'", "','", "';'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "UINT8",
		"UINT16", "UINT32", "UINT64", "INT8", "INT16", "INT32", "INT64", "FLOAT32",
		"FLOAT64", "DIGITS", "STRING", "PADDING_ATTR", "PADDING_CHAR", "ROOT",
		"PACKET", "REPEAT", "METADATA", "MATCH", "COLON", "COMMA", "SEMICOLON",
		"IDENTIFIER", "STRING_LITERAL", "LINE_COMMENT", "WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "UINT8", "UINT16",
		"UINT32", "UINT64", "INT8", "INT16", "INT32", "INT64", "FLOAT32", "FLOAT64",
		"DIGITS", "STRING", "PADDING_ATTR", "PADDING_CHAR", "ROOT", "PACKET",
		"REPEAT", "METADATA", "MATCH", "COLON", "COMMA", "SEMICOLON", "IDENTIFIER",
		"STRING_LITERAL", "LINE_COMMENT", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 41, 375, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 1, 0, 1,
		0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1,
		3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,
		4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1,
		6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1,
		8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1,
		12, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 15, 3, 15, 168, 8, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 16, 3, 16, 179, 8, 16, 1, 17, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 3, 17, 190, 8, 17, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 3, 18, 201, 8, 18, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 3, 19, 209, 8, 19, 1, 20, 1, 20, 1,
		20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 3, 20, 219, 8, 20, 1, 21, 1, 21,
		1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 3, 21, 229, 8, 21, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 3, 22, 239, 8, 22, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 3, 23, 251,
		8, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1,
		24, 3, 24, 263, 8, 24, 1, 25, 4, 25, 266, 8, 25, 11, 25, 12, 25, 267, 1,
		26, 1, 26, 1, 26, 1, 26, 5, 26, 274, 8, 26, 10, 26, 12, 26, 277, 9, 26,
		1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1,
		27, 1, 27, 3, 27, 291, 8, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28,
		1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1,
		30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1,
		33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1, 36,
		1, 37, 1, 37, 5, 37, 343, 8, 37, 10, 37, 12, 37, 346, 9, 37, 1, 38, 1,
		38, 1, 38, 5, 38, 351, 8, 38, 10, 38, 12, 38, 354, 9, 38, 1, 38, 1, 38,
		1, 39, 1, 39, 1, 39, 1, 39, 5, 39, 362, 8, 39, 10, 39, 12, 39, 365, 9,
		39, 1, 39, 1, 39, 1, 40, 4, 40, 370, 8, 40, 11, 40, 12, 40, 371, 1, 40,
		1, 40, 0, 0, 41, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17,
		9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35,
		18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53,
		27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71,
		36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 1, 0, 8, 1, 0, 48, 57, 4, 0,
		10, 10, 13, 13, 34, 34, 92, 92, 2, 0, 32, 32, 48, 48, 3, 0, 65, 90, 95,
		95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 1, 0, 96, 96, 2, 0,
		10, 10, 13, 13, 3, 0, 9, 10, 13, 13, 32, 32, 393, 0, 1, 1, 0, 0, 0, 0,
		3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0,
		11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0,
		0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0,
		0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0,
		0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1,
		0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49,
		1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0,
		57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0,
		0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0,
		0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0,
		0, 0, 0, 81, 1, 0, 0, 0, 1, 83, 1, 0, 0, 0, 3, 91, 1, 0, 0, 0, 5, 93, 1,
		0, 0, 0, 7, 95, 1, 0, 0, 0, 9, 97, 1, 0, 0, 0, 11, 114, 1, 0, 0, 0, 13,
		116, 1, 0, 0, 0, 15, 127, 1, 0, 0, 0, 17, 129, 1, 0, 0, 0, 19, 135, 1,
		0, 0, 0, 21, 142, 1, 0, 0, 0, 23, 147, 1, 0, 0, 0, 25, 153, 1, 0, 0, 0,
		27, 155, 1, 0, 0, 0, 29, 158, 1, 0, 0, 0, 31, 167, 1, 0, 0, 0, 33, 178,
		1, 0, 0, 0, 35, 189, 1, 0, 0, 0, 37, 200, 1, 0, 0, 0, 39, 208, 1, 0, 0,
		0, 41, 218, 1, 0, 0, 0, 43, 228, 1, 0, 0, 0, 45, 238, 1, 0, 0, 0, 47, 250,
		1, 0, 0, 0, 49, 262, 1, 0, 0, 0, 51, 265, 1, 0, 0, 0, 53, 269, 1, 0, 0,
		0, 55, 280, 1, 0, 0, 0, 57, 296, 1, 0, 0, 0, 59, 300, 1, 0, 0, 0, 61, 305,
		1, 0, 0, 0, 63, 312, 1, 0, 0, 0, 65, 319, 1, 0, 0, 0, 67, 328, 1, 0, 0,
		0, 69, 334, 1, 0, 0, 0, 71, 336, 1, 0, 0, 0, 73, 338, 1, 0, 0, 0, 75, 340,
		1, 0, 0, 0, 77, 347, 1, 0, 0, 0, 79, 357, 1, 0, 0, 0, 81, 369, 1, 0, 0,
		0, 83, 84, 5, 111, 0, 0, 84, 85, 5, 112, 0, 0, 85, 86, 5, 116, 0, 0, 86,
		87, 5, 105, 0, 0, 87, 88, 5, 111, 0, 0, 88, 89, 5, 110, 0, 0, 89, 90, 5,
		115, 0, 0, 90, 2, 1, 0, 0, 0, 91, 92, 5, 123, 0, 0, 92, 4, 1, 0, 0, 0,
		93, 94, 5, 125, 0, 0, 94, 6, 1, 0, 0, 0, 95, 96, 5, 61, 0, 0, 96, 8, 1,
		0, 0, 0, 97, 98, 5, 64, 0, 0, 98, 99, 5, 99, 0, 0, 99, 100, 5, 97, 0, 0,
		100, 101, 5, 108, 0, 0, 101, 102, 5, 99, 0, 0, 102, 103, 5, 117, 0, 0,
		103, 104, 5, 108, 0, 0, 104, 105, 5, 97, 0, 0, 105, 106, 5, 116, 0, 0,
		106, 107, 5, 101, 0, 0, 107, 108, 5, 100, 0, 0, 108, 109, 5, 70, 0, 0,
		109, 110, 5, 114, 0, 0, 110, 111, 5, 111, 0, 0, 111, 112, 5, 109, 0, 0,
		112, 113, 5, 40, 0, 0, 113, 10, 1, 0, 0, 0, 114, 115, 5, 41, 0, 0, 115,
		12, 1, 0, 0, 0, 116, 117, 5, 64, 0, 0, 117, 118, 5, 108, 0, 0, 118, 119,
		5, 101, 0, 0, 119, 120, 5, 110, 0, 0, 120, 121, 5, 103, 0, 0, 121, 122,
		5, 116, 0, 0, 122, 123, 5, 104, 0, 0, 123, 124, 5, 79, 0, 0, 124, 125,
		5, 102, 0, 0, 125, 126, 5, 40, 0, 0, 126, 14, 1, 0, 0, 0, 127, 128, 5,
		40, 0, 0, 128, 16, 1, 0, 0, 0, 129, 130, 5, 64, 0, 0, 130, 131, 5, 116,
		0, 0, 131, 132, 5, 97, 0, 0, 132, 133, 5, 103, 0, 0, 133, 134, 5, 40, 0,
		0, 134, 18, 1, 0, 0, 0, 135, 136, 5, 115, 0, 0, 136, 137, 5, 116, 0, 0,
		137, 138, 5, 114, 0, 0, 138, 139, 5, 105, 0, 0, 139, 140, 5, 110, 0, 0,
		140, 141, 5, 103, 0, 0, 141, 20, 1, 0, 0, 0, 142, 143, 5, 99, 0, 0, 143,
		144, 5, 104, 0, 0, 144, 145, 5, 97, 0, 0, 145, 146, 5, 114, 0, 0, 146,
		22, 1, 0, 0, 0, 147, 148, 5, 99, 0, 0, 148, 149, 5, 104, 0, 0, 149, 150,
		5, 97, 0, 0, 150, 151, 5, 114, 0, 0, 151, 152, 5, 91, 0, 0, 152, 24, 1,
		0, 0, 0, 153, 154, 5, 93, 0, 0, 154, 26, 1, 0, 0, 0, 155, 156, 5, 97, 0,
		0, 156, 157, 5, 115, 0, 0, 157, 28, 1, 0, 0, 0, 158, 159, 5, 91, 0, 0,
		159, 30, 1, 0, 0, 0, 160, 161, 5, 117, 0, 0, 161, 162, 5, 105, 0, 0, 162,
		163, 5, 110, 0, 0, 163, 164, 5, 116, 0, 0, 164, 168, 5, 56, 0, 0, 165,
		166, 5, 117, 0, 0, 166, 168, 5, 56, 0, 0, 167, 160, 1, 0, 0, 0, 167, 165,
		1, 0, 0, 0, 168, 32, 1, 0, 0, 0, 169, 170, 5, 117, 0, 0, 170, 171, 5, 105,
		0, 0, 171, 172, 5, 110, 0, 0, 172, 173, 5, 116, 0, 0, 173, 174, 5, 49,
		0, 0, 174, 179, 5, 54, 0, 0, 175, 176, 5, 117, 0, 0, 176, 177, 5, 49, 0,
		0, 177, 179, 5, 54, 0, 0, 178, 169, 1, 0, 0, 0, 178, 175, 1, 0, 0, 0, 179,
		34, 1, 0, 0, 0, 180, 181, 5, 117, 0, 0, 181, 182, 5, 105, 0, 0, 182, 183,
		5, 110, 0, 0, 183, 184, 5, 116, 0, 0, 184, 185, 5, 51, 0, 0, 185, 190,
		5, 50, 0, 0, 186, 187, 5, 117, 0, 0, 187, 188, 5, 51, 0, 0, 188, 190, 5,
		50, 0, 0, 189, 180, 1, 0, 0, 0, 189, 186, 1, 0, 0, 0, 190, 36, 1, 0, 0,
		0, 191, 192, 5, 117, 0, 0, 192, 193, 5, 105, 0, 0, 193, 194, 5, 110, 0,
		0, 194, 195, 5, 116, 0, 0, 195, 196, 5, 54, 0, 0, 196, 201, 5, 52, 0, 0,
		197, 198, 5, 117, 0, 0, 198, 199, 5, 54, 0, 0, 199, 201, 5, 52, 0, 0, 200,
		191, 1, 0, 0, 0, 200, 197, 1, 0, 0, 0, 201, 38, 1, 0, 0, 0, 202, 203, 5,
		105, 0, 0, 203, 204, 5, 110, 0, 0, 204, 205, 5, 116, 0, 0, 205, 209, 5,
		56, 0, 0, 206, 207, 5, 105, 0, 0, 207, 209, 5, 56, 0, 0, 208, 202, 1, 0,
		0, 0, 208, 206, 1, 0, 0, 0, 209, 40, 1, 0, 0, 0, 210, 211, 5, 105, 0, 0,
		211, 212, 5, 110, 0, 0, 212, 213, 5, 116, 0, 0, 213, 214, 5, 49, 0, 0,
		214, 219, 5, 54, 0, 0, 215, 216, 5, 105, 0, 0, 216, 217, 5, 49, 0, 0, 217,
		219, 5, 54, 0, 0, 218, 210, 1, 0, 0, 0, 218, 215, 1, 0, 0, 0, 219, 42,
		1, 0, 0, 0, 220, 221, 5, 105, 0, 0, 221, 222, 5, 110, 0, 0, 222, 223, 5,
		116, 0, 0, 223, 224, 5, 51, 0, 0, 224, 229, 5, 50, 0, 0, 225, 226, 5, 105,
		0, 0, 226, 227, 5, 51, 0, 0, 227, 229, 5, 50, 0, 0, 228, 220, 1, 0, 0,
		0, 228, 225, 1, 0, 0, 0, 229, 44, 1, 0, 0, 0, 230, 231, 5, 105, 0, 0, 231,
		232, 5, 110, 0, 0, 232, 233, 5, 116, 0, 0, 233, 234, 5, 54, 0, 0, 234,
		239, 5, 52, 0, 0, 235, 236, 5, 105, 0, 0, 236, 237, 5, 54, 0, 0, 237, 239,
		5, 52, 0, 0, 238, 230, 1, 0, 0, 0, 238, 235, 1, 0, 0, 0, 239, 46, 1, 0,
		0, 0, 240, 241, 5, 102, 0, 0, 241, 242, 5, 108, 0, 0, 242, 243, 5, 111,
		0, 0, 243, 244, 5, 97, 0, 0, 244, 245, 5, 116, 0, 0, 245, 246, 5, 51, 0,
		0, 246, 251, 5, 50, 0, 0, 247, 248, 5, 102, 0, 0, 248, 249, 5, 51, 0, 0,
		249, 251, 5, 50, 0, 0, 250, 240, 1, 0, 0, 0, 250, 247, 1, 0, 0, 0, 251,
		48, 1, 0, 0, 0, 252, 253, 5, 102, 0, 0, 253, 254, 5, 108, 0, 0, 254, 255,
		5, 111, 0, 0, 255, 256, 5, 97, 0, 0, 256, 257, 5, 116, 0, 0, 257, 258,
		5, 54, 0, 0, 258, 263, 5, 52, 0, 0, 259, 260, 5, 102, 0, 0, 260, 261, 5,
		54, 0, 0, 261, 263, 5, 52, 0, 0, 262, 252, 1, 0, 0, 0, 262, 259, 1, 0,
		0, 0, 263, 50, 1, 0, 0, 0, 264, 266, 7, 0, 0, 0, 265, 264, 1, 0, 0, 0,
		266, 267, 1, 0, 0, 0, 267, 265, 1, 0, 0, 0, 267, 268, 1, 0, 0, 0, 268,
		52, 1, 0, 0, 0, 269, 275, 5, 34, 0, 0, 270, 274, 8, 1, 0, 0, 271, 272,
		5, 92, 0, 0, 272, 274, 9, 0, 0, 0, 273, 270, 1, 0, 0, 0, 273, 271, 1, 0,
		0, 0, 274, 277, 1, 0, 0, 0, 275, 273, 1, 0, 0, 0, 275, 276, 1, 0, 0, 0,
		276, 278, 1, 0, 0, 0, 277, 275, 1, 0, 0, 0, 278, 279, 5, 34, 0, 0, 279,
		54, 1, 0, 0, 0, 280, 290, 5, 64, 0, 0, 281, 282, 5, 108, 0, 0, 282, 283,
		5, 101, 0, 0, 283, 284, 5, 102, 0, 0, 284, 291, 5, 116, 0, 0, 285, 286,
		5, 114, 0, 0, 286, 287, 5, 105, 0, 0, 287, 288, 5, 103, 0, 0, 288, 289,
		5, 104, 0, 0, 289, 291, 5, 116, 0, 0, 290, 281, 1, 0, 0, 0, 290, 285, 1,
		0, 0, 0, 291, 292, 1, 0, 0, 0, 292, 293, 5, 80, 0, 0, 293, 294, 5, 97,
		0, 0, 294, 295, 5, 100, 0, 0, 295, 56, 1, 0, 0, 0, 296, 297, 5, 39, 0,
		0, 297, 298, 7, 2, 0, 0, 298, 299, 5, 39, 0, 0, 299, 58, 1, 0, 0, 0, 300,
		301, 5, 114, 0, 0, 301, 302, 5, 111, 0, 0, 302, 303, 5, 111, 0, 0, 303,
		304, 5, 116, 0, 0, 304, 60, 1, 0, 0, 0, 305, 306, 5, 112, 0, 0, 306, 307,
		5, 97, 0, 0, 307, 308, 5, 99, 0, 0, 308, 309, 5, 107, 0, 0, 309, 310, 5,
		101, 0, 0, 310, 311, 5, 116, 0, 0, 311, 62, 1, 0, 0, 0, 312, 313, 5, 114,
		0, 0, 313, 314, 5, 101, 0, 0, 314, 315, 5, 112, 0, 0, 315, 316, 5, 101,
		0, 0, 316, 317, 5, 97, 0, 0, 317, 318, 5, 116, 0, 0, 318, 64, 1, 0, 0,
		0, 319, 320, 5, 77, 0, 0, 320, 321, 5, 101, 0, 0, 321, 322, 5, 116, 0,
		0, 322, 323, 5, 97, 0, 0, 323, 324, 5, 68, 0, 0, 324, 325, 5, 97, 0, 0,
		325, 326, 5, 116, 0, 0, 326, 327, 5, 97, 0, 0, 327, 66, 1, 0, 0, 0, 328,
		329, 5, 109, 0, 0, 329, 330, 5, 97, 0, 0, 330, 331, 5, 116, 0, 0, 331,
		332, 5, 99, 0, 0, 332, 333, 5, 104, 0, 0, 333, 68, 1, 0, 0, 0, 334, 335,
		5, 58, 0, 0, 335, 70, 1, 0, 0, 0, 336, 337, 5, 44, 0, 0, 337, 72, 1, 0,
		0, 0, 338, 339, 5, 59, 0, 0, 339, 74, 1, 0, 0, 0, 340, 344, 7, 3, 0, 0,
		341, 343, 7, 4, 0, 0, 342, 341, 1, 0, 0, 0, 343, 346, 1, 0, 0, 0, 344,
		342, 1, 0, 0, 0, 344, 345, 1, 0, 0, 0, 345, 76, 1, 0, 0, 0, 346, 344, 1,
		0, 0, 0, 347, 352, 5, 96, 0, 0, 348, 351, 8, 5, 0, 0, 349, 351, 7, 6, 0,
		0, 350, 348, 1, 0, 0, 0, 350, 349, 1, 0, 0, 0, 351, 354, 1, 0, 0, 0, 352,
		350, 1, 0, 0, 0, 352, 353, 1, 0, 0, 0, 353, 355, 1, 0, 0, 0, 354, 352,
		1, 0, 0, 0, 355, 356, 5, 96, 0, 0, 356, 78, 1, 0, 0, 0, 357, 358, 5, 47,
		0, 0, 358, 359, 5, 47, 0, 0, 359, 363, 1, 0, 0, 0, 360, 362, 8, 6, 0, 0,
		361, 360, 1, 0, 0, 0, 362, 365, 1, 0, 0, 0, 363, 361, 1, 0, 0, 0, 363,
		364, 1, 0, 0, 0, 364, 366, 1, 0, 0, 0, 365, 363, 1, 0, 0, 0, 366, 367,
		6, 39, 0, 0, 367, 80, 1, 0, 0, 0, 368, 370, 7, 7, 0, 0, 369, 368, 1, 0,
		0, 0, 370, 371, 1, 0, 0, 0, 371, 369, 1, 0, 0, 0, 371, 372, 1, 0, 0, 0,
		372, 373, 1, 0, 0, 0, 373, 374, 6, 40, 1, 0, 374, 82, 1, 0, 0, 0, 20, 0,
		167, 178, 189, 200, 208, 218, 228, 238, 250, 262, 267, 273, 275, 290, 344,
		350, 352, 363, 371, 2, 0, 1, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// PacketDslLexerInit initializes any static state used to implement PacketDslLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewPacketDslLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func PacketDslLexerInit() {
	staticData := &PacketDslLexerLexerStaticData
	staticData.once.Do(packetdsllexerLexerInit)
}

// NewPacketDslLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewPacketDslLexer(input antlr.CharStream) *PacketDslLexer {
	PacketDslLexerInit()
	l := new(PacketDslLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &PacketDslLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "PacketDsl.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// PacketDslLexer tokens.
const (
	PacketDslLexerT__0           = 1
	PacketDslLexerT__1           = 2
	PacketDslLexerT__2           = 3
	PacketDslLexerT__3           = 4
	PacketDslLexerT__4           = 5
	PacketDslLexerT__5           = 6
	PacketDslLexerT__6           = 7
	PacketDslLexerT__7           = 8
	PacketDslLexerT__8           = 9
	PacketDslLexerT__9           = 10
	PacketDslLexerT__10          = 11
	PacketDslLexerT__11          = 12
	PacketDslLexerT__12          = 13
	PacketDslLexerT__13          = 14
	PacketDslLexerT__14          = 15
	PacketDslLexerUINT8          = 16
	PacketDslLexerUINT16         = 17
	PacketDslLexerUINT32         = 18
	PacketDslLexerUINT64         = 19
	PacketDslLexerINT8           = 20
	PacketDslLexerINT16          = 21
	PacketDslLexerINT32          = 22
	PacketDslLexerINT64          = 23
	PacketDslLexerFLOAT32        = 24
	PacketDslLexerFLOAT64        = 25
	PacketDslLexerDIGITS         = 26
	PacketDslLexerSTRING         = 27
	PacketDslLexerPADDING_ATTR   = 28
	PacketDslLexerPADDING_CHAR   = 29
	PacketDslLexerROOT           = 30
	PacketDslLexerPACKET         = 31
	PacketDslLexerREPEAT         = 32
	PacketDslLexerMETADATA       = 33
	PacketDslLexerMATCH          = 34
	PacketDslLexerCOLON          = 35
	PacketDslLexerCOMMA          = 36
	PacketDslLexerSEMICOLON      = 37
	PacketDslLexerIDENTIFIER     = 38
	PacketDslLexerSTRING_LITERAL = 39
	PacketDslLexerLINE_COMMENT   = 40
	PacketDslLexerWS             = 41
)
