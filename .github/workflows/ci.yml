name: Financial Proto Compiler CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Download ANTLR
      run: |
        mkdir -p ~/software
        curl -o "$HOME/software/antlr-4.13.2-complete.jar" https://www.antlr.org/download/antlr-4.13.2-complete.jar

    - name: Install gotest
      run: go install github.com/rakyll/gotest@latest

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: make build

    - name: Run tests
      run: make test

  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Java 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Download ANTLR
      run: |
        mkdir -p ~/software
        curl -o "$HOME/software/antlr-4.13.2-complete.jar" https://www.antlr.org/download/antlr-4.13.2-complete.jar

    - name: Cross compile binaries
      run: |
        make cross-build
        ls -la release/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/fin-protoc-*-linux-amd64.tar.gz
          release/fin-protoc-*-windows-amd64.zip
          release/fin-protoc-*-darwin-amd64.tar.gz
        draft: false
        prerelease: false